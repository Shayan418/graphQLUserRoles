type User {
	id: ID!
	username: String!
	email: String!
	firstName: String!
	lastName: String!
	roles: [Role]
}

type Role {
	id: ID!
	roleName: String!
	description: String!
}

# Root
type Query {
	findUserById(id: ID): User
	findUserByUsername(username: String!): User
	findAllUsers(page: Int!, size: Int!): [User]!
	countUsers: Int!
	findAllRoles(page: Int!, size: Int!): [Role]!
	countRoles: Int!
}

# Root
type Mutation {
	createUser(username: String!, email: String!, firstName: String!, lastName:String!, roleIds: [ID]): User!
	addUserRole(id: ID!, roleIds: [ID]): User!
	removeUserRole(id: ID!, roleIds: [ID]): User!
	deleteUser(id: ID!): Boolean
	createRole(roleName: String!, description: String!): Role!
}